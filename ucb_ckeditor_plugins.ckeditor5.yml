# If using yml to configure plugins, rename this to {module_name}.ckeditor5.yml.
# If using annotations, this file can be removed.
# @see https://www.drupal.org/docs/drupal-apis/plugin-api/annotations-based-plugins
#   For information on using annotations to define plugins.
# @see the CKEditor 5 module's README.md for more details regarding plugin
#   configuration options.

ucb_ckeditor_plugins_box:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - box.Box
      - box.BoxGeneralHtmlSupport
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Box
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/box.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/box.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      box:
        label: Box
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      # Note that it necessary for elements to separately provide both the tag
      # (f.e. `<div>`) and the attribute being added to the tag
      # (f.e. `<div class>`).
      - <div>
      - <div class="ucb-box ucb-box-inner ucb-box-title ucb-box-content ucb-ucb-box-title-left ucb-box-title-center ucb-box-title-right ucb-box-title-hidden ucb-box-alignment-left ucb-box-alignment-none ucb-box-alignment-right ucb-box-style-fill ucb-box-style-outline ucb-box-style-none ucb-box-theme-black ucb-box-theme-darkgray ucb-box-theme-lightgray ucb-box-theme-white">
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ucb_ckeditor_plugins_invisible:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - invisible.Invisible
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Invisible
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/invisible.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/invisible.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      invisible:
        label: Invisible
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      - <span>
      - <span class='visually-hidden'>
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ucb_ckeditor_plugins_cuiconextras:
  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - cuiconextras.CUIconExtras
  # Configuration that will be used directly by Drupal.
  drupal:
    label: CU Boulder Icon Extras
    library: ucb_ckeditor_plugins/cuiconextras.editor
    elements:
      - <i>
      - <i class>
    conditions:
      plugins:
        - ckeditor5_icons_icon

ucb_ckeditor_plugins_map:
  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - map.Map
  # Configuration that will be used directly by Drupal.
  drupal:
    label: Map
    library: ucb_ckeditor_plugins/map.editor
    admin_library: ucb_ckeditor_plugins/map.admin
    toolbar_items:
      map:
        label: Map
    elements:
      - <ucb-map>
      - <ucb-map class="ucb-map ucb-campus-map ucb-google-map ucb-map-size-small ucb-map-size-medium ucb-map-size-large">
      - <ucb-map data-map-location>
    conditions:
      filter: filter_map_embed

ucb_ckeditor_plugins_calendar:
  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - calendar.Calendar
  # Configuration that will be used directly by Drupal.
  drupal:
    label: Calendar
    library: ucb_ckeditor_plugins/calendar.editor
    admin_library: ucb_ckeditor_plugins/calendar.admin
    toolbar_items:
      calendar:
        label: Calendar
    elements:
      - <ucb-calendar>
      - <ucb-calendar class="ucb-calendar ucb-google-calendar">
      - <ucb-calendar data-query-string>
    conditions:
      filter: filter_calendar_embed

ucb_ckeditor_plugins_tooltip:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - tooltip.Tooltip
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Tooltip
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/tooltip.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/tooltip.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      tooltip:
        label: Tooltip
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      # Note that it necessary for elements to separately provide both the tag
      # <abbr> is used to make abbreviations which in essence is a tooltip.
      - <abbr>
      - <abbr title>
      - <abbr class="ucb-tooltip">
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ucb_ckeditor_plugins_button:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - button.Button
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Button
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/button.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/button.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      button:
        label: Button
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      - <a>
      - <a href>
      - <a class='ucb-link-button ucb-link-button-blue'><a class='ucb-link-button ucb-link-button-black'><a class='ucb-link-button ucb-link-button-gray'><a class='ucb-link-button ucb-link-button-white'><a class='ucb-link-button ucb-link-button-large'><a class='ucb-link-button ucb-link-button-regular'><a class='ucb-link-button ucb-link-button-small'><a class='ucb-link-button ucb-link-button-full'><a class='ucb-link-button ucb-link-button-default'><a class='ucb-link-button ucb-link-button-blue ucb-link-button-large ucb-link-button-full'><a class='ucb-link-button ucb-link-button-blue ucb-link-button-large ucb-link-button-default'><a class='ucb-link-button ucb-link-button-blue ucb-link-button-regular ucb-link-button-full'><a class='ucb-link-button ucb-link-button-blue ucb-link-button-regular ucb-link-button-default'><a class='ucb-link-button ucb-link-button-blue ucb-link-button-small ucb-link-button-full'><a class='ucb-link-button ucb-link-button-blue ucb-link-button-small ucb-link-button-default'><a class='ucb-link-button ucb-link-button-black ucb-link-button-large ucb-link-button-full'><a class='ucb-link-button ucb-link-button-black ucb-link-button-large ucb-link-button-default'><a class='ucb-link-button ucb-link-button-black ucb-link-button-regular ucb-link-button-full'><a class='ucb-link-button ucb-link-button-black ucb-link-button-regular ucb-link-button-default'><a class='ucb-link-button ucb-link-button-black ucb-link-button-small ucb-link-button-full'><a class='ucb-link-button ucb-link-button-black ucb-link-button-small ucb-link-button-default'><a class='ucb-link-button ucb-link-button-gray ucb-link-button-large ucb-link-button-full'><a class='ucb-link-button ucb-link-button-gray ucb-link-button-large ucb-link-button-default'><a class='ucb-link-button ucb-link-button-gray ucb-link-button-regular ucb-link-button-full'><a class='ucb-link-button ucb-link-button-gray ucb-link-button-regular ucb-link-button-default'><a class='ucb-link-button ucb-link-button-gray ucb-link-button-small ucb-link-button-full'><a class='ucb-link-button ucb-link-button-gray ucb-link-button-small ucb-link-button-default'><a class='ucb-link-button ucb-link-button-white ucb-link-button-large ucb-link-button-full'><a class='ucb-link-button ucb-link-button-white ucb-link-button-large ucb-link-button-default'><a class='ucb-link-button ucb-link-button-white ucb-link-button-regular ucb-link-button-full'><a class='ucb-link-button ucb-link-button-white ucb-link-button-regular ucb-link-button-default'><a class='ucb-link-button ucb-link-button-white ucb-link-button-small ucb-link-button-full'><a class='ucb-link-button ucb-link-button-white ucb-link-button-small ucb-link-button-default'><a class='ucb-link-button ucb-link-button-gold ucb-link-button-large ucb-link-button-full'><a class='ucb-link-button ucb-link-button-gold ucb-link-button-large ucb-link-button-default'><a class='ucb-link-button ucb-link-button-gold ucb-link-button-regular ucb-link-button-full'><a class='ucb-link-button ucb-link-button-gold ucb-link-button-regular ucb-link-button-default'><a class='ucb-link-button ucb-link-button-gold ucb-link-button-small ucb-link-button-full'><a class='ucb-link-button ucb-link-button-gold ucb-link-button-small ucb-link-button-default'>
      - <span>
      - <span class="ucb-link-button-contents">
ucb_ckeditor_plugins_buttongroup:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - buttongroup.ButtonGroup
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Button Group
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/buttongroup.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/buttongroup.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      buttongroup:
        label: Button Group
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      - <div class='ucb-button-group ucb-button-group-blue'><div class='ucb-button-group ucb-button-group-black'><div class='ucb-button-group ucb-button-group-gray'><div class='ucb-button-group ucb-button-group-white'><div class='ucb-button-group ucb-button-group-large'><div class='ucb-button-group ucb-button-group-regular'><div class='ucb-button-group ucb-button-group-small'><div class='ucb-button-group ucb-button-group-blue ucb-button-group-large'><div class='ucb-button-group ucb-button-group-blue ucb-button-group-regular'><div class='ucb-button-group ucb-button-group-blue ucb-button-group-small'><div class='ucb-button-group ucb-button-group-black ucb-button-group-large'><div class='ucb-button-group ucb-button-group-black ucb-button-group-regular'><div class='ucb-button-group ucb-button-group-black ucb-button-group-small'><div class='ucb-button-group ucb-button-group-gray ucb-button-group-large'><div class='ucb-button-group ucb-button-group-gray ucb-button-group-regular'><div class='ucb-button-group ucb-button-group-gray ucb-button-group-small'><div class='ucb-button-group ucb-button-group-white ucb-button-group-large'><div class='ucb-button-group ucb-button-group-white ucb-button-group-regular'><div class='ucb-button-group ucb-button-group-white ucb-button-group-small'><div class='ucb-button-group ucb-button-group-gold ucb-button-group-large'><div class='ucb-button-group ucb-button-group-gold ucb-button-group-regular'><div class='ucb-button-group ucb-button-group-gold ucb-button-group-small'>

ucb_ckeditor_plugins_countup:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - countup.Countup
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Countup
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/countup.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/countup.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      countup:
        label: Countup
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      # Note that it necessary for elements to separately provide both the tag
      # <div> is used to make containers that are tagged with coutner which casues the number to increment until matching the input.
      - <span>
      - <span class="ucb-countup counter">
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ucb_ckeditor_plugins_countdown:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - countdown.Countdown
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Countdown
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/countdown.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/countdown.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      countdown:
        label: Countdown
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      # Note that it necessary for elements to separately provide both the tag
      # <span> is used to make containers that are tagged with coutner which casues the number to increment until matching the input.
      - <span>
      - <span aria-hidden="true" class="ucb-countdown countdown-full countdown-solid countdown-transparent countdown-inline countdown-stacked">
      - <span aria-hidden="true">
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ucb_ckeditor_plugins_callout:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - callout.Callout
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Callout
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/callout.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/callout.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      callout:
        label: Callout
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      # Note that it necessary for elements to separately provide both the tag
      # <div> is used to make containers that are tagged with coutner which casues the number to increment until matching the input.
      - <div>
      - <div class="feature-layout-callout feature-layout-callout-medium feature-layout-callout-large feature-layout-callout-xlarge ucb-callout-content">
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ucb_ckeditor_plugins_column:
  # Use the provider: property for this plugin to depend on another module.

  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - column.Column
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Column
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/column.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/column.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      column:
        label: Column
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      - <div>
      - <div class="row">
      - <div class="col">
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ucb_ckeditor_plugins_jumpmenu:
  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - jumpmenu.JumpMenu
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue

  # Configuration that will be used directly by Drupal.
  drupal:
    label: Jump Menu
    # The library loaded while using the editor.
    library: ucb_ckeditor_plugins/jumpmenu.editor
    # The library loaded when configuring the text format using this plugin.
    admin_library: ucb_ckeditor_plugins/jumpmenu.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      jumpmenu:
        label: Jump Menu
    elements:
      - <ucb-jump-menu>
      - <ucb-jump-menu headertag data-title>
