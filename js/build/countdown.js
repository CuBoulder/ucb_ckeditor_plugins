!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.CKEditor5=e():(t.CKEditor5=t.CKEditor5||{},t.CKEditor5.countdown=e())}(self,(()=>(()=>{var __webpack_modules__=[(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ 1))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.countdown/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},t=>{"use strict";t.exports=CKEditor5.dll},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   backgroundOptions: () => (/* binding */ backgroundOptions),\n/* harmony export */   defaultBackground: () => (/* binding */ defaultBackground),\n/* harmony export */   defaultStyle: () => (/* binding */ defaultStyle),\n/* harmony export */   styleOptions: () => (/* binding */ styleOptions)\n/* harmony export */ });\nconst backgroundOptions = {\n\tsolid: {\n\t\tlabel: 'Solid',\n\t\tclassName: 'countdown-solid'\n\t},\n\ttransparent: {\n\t\tlabel: 'Transparent',\n\t\tclassName: 'countdown-transparent'\n\t},\n};\n\nconst defaultBackground = 'transparent'\n\nconst styleOptions = {\n\tinline: {\n\t\tlabel: 'Inline',\n\t\tclassName: 'countdown-inline'\n\t},\n\tstacked: {\n\t\tlabel: 'Stacked',\n\t\tclassName: 'countdown-stacked'\n\t},\n};\n\nconst defaultStyle = 'inline';\n\n\n//# sourceURL=webpack://CKEditor5.countdown/./ckeditor5_plugins/countdown/src/countdownconfig.js?")},(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ 1))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.countdown/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _countdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./countdown */ 5);\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Countdown: _countdown__WEBPACK_IMPORTED_MODULE_0__["default"]\n});\n\n\n//# sourceURL=webpack://CKEditor5.countdown/./ckeditor5_plugins/countdown/src/index.js?')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ Countdown)\n/* harmony export */ });\n/* harmony import */ var _countdownediting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./countdownediting */ 6);\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/core */ 0);\n/* harmony import */ var _countdownui_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./countdownui.js */ 9);\n\n\n\n\n/**\n * @file This is what CKEditor refers to as a master (glue) plugin. Its role is\n * just to load the “editing” and “UI” components of this Plugin. Those\n * components could be included in this file, but\n *\n * I.e, this file\'s purpose is to integrate all the separate parts of the plugin\n * before it\'s made discoverable via index.js.\n */\n\n// The contents of CountdownUI and CountdownEditing could be included in this\n// file, but it is recommended to separate these concerns in different files.\n  class Countdown extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.Plugin {\n    static get requires() {\n      return [ _countdownediting__WEBPACK_IMPORTED_MODULE_0__["default"], _countdownui_js__WEBPACK_IMPORTED_MODULE_2__["default"] ];\n    }\n  }\n\n//# sourceURL=webpack://CKEditor5.countdown/./ckeditor5_plugins/countdown/src/countdown.js?')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CountdownEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ 0);\n/* harmony import */ var _insertcountdowncommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./insertcountdowncommand */ 7);\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/widget */ 8);\n/* harmony import */ var _countdownconfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./countdownconfig */ 2);\n/**\n * @file defines schemas, converters, and commands for the countdown plugin.\n * \n * @typedef { import('@ckeditor/ckeditor5-engine').DowncastWriter } DowncastWriter\n * @typedef { import('@ckeditor/ckeditor5-engine/src/view/containerelement').default } ContainerElement\n */\n\n\n\n\n\n\n\nclass CountdownEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n\tstatic get requires() {\n\t\treturn [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.Widget];\n\t}\n\n\tinit() {\n\t\tthis._defineSchema();\n\t\tthis._defineConverters();\n\t\tthis.editor.commands.add('addCountdown', new _insertcountdowncommand__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.editor));\n\t}\n\n\t// Schemas are registered via the central `editor` object.\n\t_defineSchema() {\n\t\tconst schema = this.editor.model.schema;\n\t\tschema.register('cuCountdown', {\n\t\t\tallowWhere: '$text',\n\t\t\tisObject: true,\n\t\t\tisInline: true,\n\t\t\tallowAttributes: ['cuCountdownBackground', 'cuCountdownStyle', 'cuCountdownDate']\n\t\t});\n\t}\n\n\t/**\n\t * Converters determine how CKEditor 5 models are converted into markup and\n\t * vice-versa.\n\t */\n\t_defineConverters() {\n\t\t// Converters are registered via the central editor object.\n\t\tconst { conversion } = this.editor;\n\n\t\t// Attributes convertable to/from a class name need no separate upcast and downcast definitions\n\t\tconversion.attributeToAttribute(buildAttributeToAttributeDefinition('cuCountdownBackground', _countdownconfig__WEBPACK_IMPORTED_MODULE_3__.backgroundOptions));\n\t\tconversion.attributeToAttribute(buildAttributeToAttributeDefinition('cuCountdownStyle', _countdownconfig__WEBPACK_IMPORTED_MODULE_3__.styleOptions));\n\n\t\t// Element upcasts\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tmodel: 'cuCountdown',\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tclasses: 'cu-countdown'\n\t\t\t}\n\t\t});\n\n\t\t// Element downcasts – elements become widgets in the editor via `editingDowncast`\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'cuCountdown',\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tclasses: 'cu-countdown'\n\t\t\t}\n\t\t});\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'cuCountdown',\n\t\t\tview: (modelElement, { writer }) =>\n\t\t\t\t(0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.toWidget)(\n\t\t\t\t\twriter.createContainerElement('span', { class: 'cu-countdown'}),\n\t\t\t\t\twriter, { label: 'Countdown Widget' }\n\t\t\t\t)\n\t\t});\n\t}\n}\n\nfunction buildAttributeToAttributeDefinition(attributeName, attributeOptions) {\n\tconst view = {};\n\tfor (const [name, option] of Object.entries(attributeOptions))\n\t\tview[name] = { key: 'class', value: option.className };\n\treturn {\n\t\tmodel: {\n\t\t\tkey: attributeName,\n\t\t\tvalues: Object.keys(attributeOptions)\n\t\t},\n\t\tview\n\t};\n}\n\n\n//# sourceURL=webpack://CKEditor5.countdown/./ckeditor5_plugins/countdown/src/countdownediting.js?")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CountdownCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ 0);\n/* harmony import */ var _countdownconfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./countdownconfig */ 2);\n/**\n * @file defines InsertCountdownCommand, which is executed when the countdown toolbar button is pressed.\n */\n\n\n\n\nclass CountdownCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n\tconstructor(editor) {\n\t\tsuper(editor);\n\t\tthis.set('existingCountdownSelected', false);\n\t}\n\n\texecute({ style = _countdownconfig__WEBPACK_IMPORTED_MODULE_1__.defaultStyle, background = _countdownconfig__WEBPACK_IMPORTED_MODULE_1__.defaultBackground, date}) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tmodel.change(writer => {\n\t\t\tconst range = selection.getFirstRange();\n\t\t\tconst cuCountdown = writer.createElement('cuCountdown', {\n\t\t\t\tcuCountdownBackground: background,\n\t\t\t\tcuCountdownStyle: style,\n\t\t\t\tcuCountdownDate: date\n\t\t\t});\n\n\t\t\t// Create cuCountdownDate as a separate text node within cuCountdown\n\t\t\tconst cuCountdownDate = writer.createText(date);\n\t\t\twriter.insert(cuCountdownDate, cuCountdown);\n\n\t\t\tmodel.insertContent(cuCountdown);\n\t\t});\n\t}\n\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst selectedElement = selection.getSelectedElement();\n\t\n\t\tconst allowedIn = model.schema.findAllowedParent(\n\t\t\tselection.getFirstPosition(),\n\t\t\t'cuCountdown'\n\t\t);\n\t\n\t\tthis.isEnabled = allowedIn !== null;\n\t\n\t\tthis.existingCountdownSelected = isButtonElement(selectedElement) ? selectedElement : null;\n\t\n\t\tif (this.existingCountdownSelected) {\n\t\t\t// Check and update the 'date' variable based on 'cuCountdownDate' attribute\n\t\t\tconst cuCountdownDateAttribute = this.existingCountdownSelected.getAttribute('cuCountdownDate');\n\t\t\tif (cuCountdownDateAttribute !== undefined) {\n\t\t\t\tthis.date = cuCountdownDateAttribute;\n\t\t\t} else {\n\t\t\t\tthis.date = ''; // Set a default value if 'cuCountdownDate' is not defined\n\t\t\t}\n\t\t}\n\t}\t\n}\n\nfunction isButtonElement(element) {\n\treturn element && element.name === 'cuCountdown';\n}\n\n\n//# sourceURL=webpack://CKEditor5.countdown/./ckeditor5_plugins/countdown/src/insertcountdowncommand.js?")},(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ 1))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.countdown/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CountdownUI)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ 0);\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ 3);\n/* harmony import */ var _countdownview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./countdownview */ 10);\n/* harmony import */ var _icons_countdown_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../icons/countdown.svg */ 13);\n\n\n\n\n\nclass CountdownUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n\tstatic get requires() {\n\t\treturn [ ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon ];\n\t}\n\tstatic get pluginName(){\n\t\treturn 'CountdownUI'\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst componentFactory = editor.ui.componentFactory;\n\t\tconst insertCountdownCommand = editor.commands.get('addCountdown')\n\t\tconst viewDocument = editor.editing.view.document;\n\n        // Create the balloon and the form view.\n\t\tthis._balloon = this.editor.plugins.get( ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon );\n\t\tthis.formView = this._createFormView(editor.locale);\n\t\tthis.buttonView = null;\n\n\t\t// This will register the Countdown button to the toolbar\n\t\tcomponentFactory.add( 'countdown', (locale) => {\n\t\t\tconst button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n\n\t\t\tbutton.label = 'Countdown';\n\t\t\tbutton.icon = _icons_countdown_svg__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\t\t\tbutton.tooltip = true;\n\t\t\tbutton.withText = false;\n\t\t\tbutton.isToggleable = true;\n\t\t\t// Show the UI on button click.\n\t\t\tthis.listenTo( button, 'execute', () => {\n\t\t\t\tthis._showUI(insertCountdownCommand.existingCountdownSelected)\n\t\t\t} );\n\n\t\t\tthis.buttonView = button;\n\n\t\t\t// Show the on/off in Toolbar if a button is already selected.\n\t\t\tconst updateCountdownState = () => {\n\t\t\t\tconst countdownSelected = insertCountdownCommand.existingCountdownSelected;\n\t\t\t\tbutton.isOn = !!countdownSelected;\n\t\t\t};\n\t\t\t  \n\t\t\t // Listen for changes in the cuCountdown selection.\n\t\t\tthis.listenTo(insertCountdownCommand, 'change:value', updateCountdownState);\n\t\t\tthis.listenTo(insertCountdownCommand, 'change:existingCountdownSelected', updateCountdownState);\n\t\t\t\n\t\t\t// Shows the UI on click of a button widget.\n\t\t\tthis.listenTo(viewDocument, 'click', () => {\n\t\t\t\tif (insertCountdownCommand.existingCountdownSelected)\n\t\t\t\t\tthis._showUI(insertCountdownCommand.existingCountdownSelected);\n\t\t\t});\n\n\t\t\tthis.on('showUI', (eventInfo, newButton) => {\n\t\t\t\tthis._showUI(newButton)\n\t\t\t});\n\n\t\t\t// Bind the state of the button to the command.\n\t\t\tbutton.bind('isOn', 'isEnabled').to(insertCountdownCommand, 'value', 'isEnabled');\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\n\t_createFormView(locale) {\n\t\tconst editor = this.editor;\n\t\tconst componentFactory = editor.ui.componentFactory;\n\t\tconst formView = new _countdownview__WEBPACK_IMPORTED_MODULE_2__[\"default\"]( locale, componentFactory);\n\n\n\t\t// Execute the command after clicking the \"Save\" button.\n\t\tthis.listenTo( formView, 'submit', () => {\n\t\t\t// Grab values from the Form and title input fields.\n\t\t\tconst value = {\n\t\t\t\tdate: formView.dateInputView.fieldView.element.value,\n\t\t\t\tbackground: formView.background,\n\t\t\t\tstyle: formView.style\n\n\t\t\t};\n\t\t\teditor.execute( 'addCountdown', value );\n\n            // Hide the form view after submit.\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Hide the form view after clicking the \"Cancel\" button.\n\t\tthis.listenTo( formView, 'cancel', () => {\n\t\t\tthis._hideUI();\n\t\t} );\n\t\t\n\t\t// Close the panel on esc key press when the form has focus.\n\t\tformView.keystrokes.set('Esc', (data, cancel) => {\n\t\t\tthis._hideUI();\n\t\t\tcancel();\n\t\t});\n\n\t\t// Hide the form view when clicking outside the balloon.\n\t\t(0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.clickOutsideHandler)( {\n\t\t\temitter: formView,\n\t\t\tactivator: () => this._balloon.visibleView === formView,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideUI()\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t_showUI(selectedButton) {\n\t\tthis.buttonView.isOn = true;\n\n\t\t// If there's an existing balloon open, close it! \n\t\tif (this._balloon.visibleView) {\n\t\t\tthis._hideUI();\n\t\t}\n\t\t\n\t\t// Check the value of the command.\n\t\tconst commandValue = this.editor.commands.get( 'addCountdown' ).value;\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.formView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\n\t\tif (selectedButton) {\n\t\t\tconst background = selectedButton.getAttribute('cuCountdownBackground');\n\t\t\tconst style = selectedButton.getAttribute('cuCountdownStyle');\n\t\t\n\t\t\tthis.formView.background = background;\n\t\t\tthis.formView.style = style;\n\t\t\n\t\t\tthis.formView.dateInputView.fieldView.value = date;\n\t\t\tthis.formView.dateInputView.fieldView.element.value = date; // Update the input field value\n\t\t\tthis.formView.dateInputView.fieldView.set('value', date); // Update the input field value (alternative method)\n\t\t}\n\n\t\t// Disable the input when the selection is not collapsed.\n\t\t// this.formView.dateInputView.isEnabled = selection.getFirstRange().isCollapsed;\n\n\t\t// Fill the form using the state (value) of the command.\n\t\tif ( commandValue ) {\n\t\t\tthis.formView.dateInputView.fieldView.value = commandValue.date;\n\t\t\tthis.formView.backgroundDropdown.fieldView.value = commandValue.background;\n\t\t\tthis.formView.styleDropdown.fieldView.value = commandValue.style\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tthis.formView.dateInputView.fieldView.focus();\n\t\t}, 0);\n\t}\n\t_hideUI() {\n\t\t// Case for if user is rapidly clicking add button to button group\n\t\tif (!this._balloon.hasView(this.formView)) {\n\t\t\treturn; // If the formView isn't in the balloon, do nothing\n\t\t}\n\t\t// Clear the input field values and reset the form.\n\t\tthis.formView.element.reset();\n\t\tthis.buttonView.isOn = false;\n\n\t\tthis._balloon.remove( this.formView );\n\n\t\t// Focus the editing view after inserting the tooltip so the user can start typing the content\n\t\t// right away and keep the editor focused.\n\t\tthis.editor.editing.view.focus();\n\t}\n\n\t_getBalloonPositionData() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tlet target = null;\n\n\t\t// Set a target position by converting view selection range to DOM\n\t\ttarget = () => view.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange() );\n\n\t\treturn {\n\t\t\ttarget\n\t\t};\n\t}\n}\n\n\n//# sourceURL=webpack://CKEditor5.countdown/./ckeditor5_plugins/countdown/src/countdownui.js?")},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FormView)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/ui */ 3);\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/utils */ 11);\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/core */ 0);\n/* harmony import */ var _icons_paint_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../icons/paint.svg */ 12);\n/* harmony import */ var _countdownconfig__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./countdownconfig */ 2);\n\n\n\n\n\n\nclass FormView extends ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View {\n\tconstructor( locale, componentFactory) {\n\t\tsuper( locale);\n\t\tthis.focusTracker = new ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.FocusTracker();\n\t\tthis.keystrokes = new ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.KeystrokeHandler();\n\n\t\t// Creates Dropdowns for Background, Size, Style\n\t\tthis.backgroundDropdown = this._createSelectionDropdown(locale, 'Background', _icons_paint_svg__WEBPACK_IMPORTED_MODULE_3__[\"default\"], 'background', _countdownconfig__WEBPACK_IMPORTED_MODULE_4__.backgroundOptions, _countdownconfig__WEBPACK_IMPORTED_MODULE_4__.defaultBackground)\n\t\tthis.styleDropdown = this._createSelectionDropdown(locale, 'Style', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__.icons.objectInline, 'style', _countdownconfig__WEBPACK_IMPORTED_MODULE_4__.styleOptions, _countdownconfig__WEBPACK_IMPORTED_MODULE_4__.defaultStyle)\n\t\t\n\t\t// Creates the main input field.\n\t\t// this.innerTextInputView = this._createInput( 'Button Text' );\n\t\tthis.dateInputView = this._createInput( 'Add Date (MM/DD/YYYY hh:mm:ss)' );\n\t\t\n\t\t// Sets defaults\n\t\tthis.set('background', _countdownconfig__WEBPACK_IMPORTED_MODULE_4__.defaultBackground)\n\t\tthis.set('style', _countdownconfig__WEBPACK_IMPORTED_MODULE_4__.defaultStyle)\n\t\tthis.dateInputView.fieldView.bind('date').to(this, 'date');\n\t\tthis.set('date', 'MM/DD/YYYY hh:mm:ss')\n\n\n\t\tthis.saveButtonView = this._createButton( 'Save', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__.icons.check, 'ck-button-save' );\n\n\t\t// Submit type of the button will trigger the submit event on entire form when clicked \n\t\t//(see submitHandler() in render() below).\n\t\tthis.saveButtonView.type = 'submit';\n\n\t\tthis.cancelButtonView = this._createButton( 'Cancel', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__.icons.cancel, 'ck-button-cancel' );\n\n\t\t// Delegate ButtonView#execute to FormView#cancel.\n\t\tthis.cancelButtonView.delegate( 'execute' ).to( this, 'cancel' );\n\n\t\tthis.childViews = this.createCollection( [\n\t\t\tthis.backgroundDropdown,\n\t\t\tthis.styleDropdown,\n\t\t\tthis.dateInputView,\n\t\t\tthis.saveButtonView,\n\t\t\tthis.cancelButtonView\n\t\t] );\n\n\t\tthis._focusCycler = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.FocusCycler( {\n\t\t\tfocusables: this.childViews,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-countdown-form' ],\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: this.childViews\n\t\t} );\n\t}\n\n\trender() {\n\t\tsuper.render();\n\n\t\t(0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.submitHandler)( {\n\t\t\tview: this\n\t\t} );\n\n\t\tthis.childViews._items.forEach( view => {\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( view.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\tfocus() {\n\t\t// If the number text field is enabled, focus it straight away to allow the user to type.\n\t\tif ( this.dateInputView.isEnabled ) {\n\t\t\tthis.dateInputView.focus();\n\t\t}\n\t\t// Focus the number text field if the former is disabled.\n\t\telse {\n\t\t\tthis.dateInputView.focus();\n\t\t}\n\t}\n\n\t_createInput( label ) {\n\t\tconst labeledInput = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.LabeledFieldView( this.locale, ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.createLabeledInputText );\n\n\t\tlabeledInput.label = label;\n\n\t\treturn labeledInput;\n\t}\n\n\t_createButton( label, icon, className ) {\n\t\tconst button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView();\n\n\t\tbutton.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true,\n\t\t\tclass: className\n\t\t} );\n\n\t\treturn button;\n\t}\n\n\t_createSelectionDropdown(locale, tooltip, icon, attribute, options, defaultValue) {\n\t\tconst dropdownView = (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.createDropdown)(locale), defaultOption = options[defaultValue];\n\t\t(0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.addToolbarToDropdown)(dropdownView, Object.entries(options).map(([optionValue, option]) => this._createSelectableButton(locale, option.label, option.icon, attribute, optionValue)));\n\t\tdropdownView.buttonView.set({\n\t\t\ticon,\n\t\t\ttooltip: locale.t(tooltip),\n\t\t\twithText: !icon\n\t\t});\n\t\tdropdownView.buttonView.bind('label').to(this, attribute, value => locale.t(options[value] ? options[value].label : defaultOption.label));\n\t\tif (icon === options[defaultValue].icon) // If the icon for the dropdown is the same as the icon for the default option, it changes to reflect the current selection.\n\t\t\tdropdownView.buttonView.bind('icon').to(this, attribute, value => options[value] ? options[value].icon : defaultOption.icon);\n\t\treturn dropdownView;\n\t}\n\n\t_createSelectableButton(locale, label, icon, attribute, value) {\n\t\tconst buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView();\n\t\tbuttonView.set({\n\t\t\tlabel: locale.t(label),\n\t\t\ticon,\n\t\t\ttooltip: !!icon, // Displays the tooltip on hover if there is an icon\n\t\t\tisToggleable: true, // Allows the button with the attribute's current value to display as selected\n\t\t\twithText: !icon // Displays the button as text if the icon is falsey\n\t\t});\n\t\t// Allows the button with the attribute's current value to display as selected\n\t\tbuttonView.bind('isOn').to(this, attribute, attributeValue => attributeValue === value);\n\t\t// Sets the attribute to the button's value on click\n\t\tthis.listenTo(buttonView, 'execute', () => {\n\t\t\tthis.set(attribute, value);\n\t\t});\n\t\treturn buttonView;\n\t}\n}\n\n//# sourceURL=webpack://CKEditor5.countdown/./ckeditor5_plugins/countdown/src/countdownview.js?")},(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ 1))("./src/utils.js");\n\n//# sourceURL=webpack://CKEditor5.countdown/delegated_./utils.js_from_dll-reference_CKEditor5.dll?')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 384 512\\">\x3c!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --\x3e<path d=\\"M162.4 6c-1.5-3.6-5-6-8.9-6h-19c-3.9 0-7.5 2.4-8.9 6L104.9 57.7c-3.2 8-14.6 8-17.8 0L66.4 6c-1.5-3.6-5-6-8.9-6H48C21.5 0 0 21.5 0 48V224v22.4V256H9.6 374.4 384v-9.6V224 48c0-26.5-21.5-48-48-48H230.5c-3.9 0-7.5 2.4-8.9 6L200.9 57.7c-3.2 8-14.6 8-17.8 0L162.4 6zM0 288v32c0 35.3 28.7 64 64 64h64v64c0 35.3 28.7 64 64 64s64-28.7 64-64V384h64c35.3 0 64-28.7 64-64V288H0zM192 432a16 16 0 1 1 0 32 16 16 0 1 1 0-32z\\"/></svg>\\n");\n\n//# sourceURL=webpack://CKEditor5.countdown/./icons/paint.svg?')},(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 384 512\\">\x3c!--! Font Awesome Pro 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --\x3e<path d=\\"M24 0C10.7 0 0 10.7 0 24S10.7 48 24 48h8V67c0 40.3 16 79 44.5 107.5L158.1 256 76.5 337.5C48 366 32 404.7 32 445v19H24c-13.3 0-24 10.7-24 24s10.7 24 24 24H360c13.3 0 24-10.7 24-24s-10.7-24-24-24h-8V445c0-40.3-16-79-44.5-107.5L225.9 256l81.5-81.5C336 146 352 107.3 352 67V48h8c13.3 0 24-10.7 24-24s-10.7-24-24-24H24zM192 289.9l81.5 81.5C293 391 304 417.4 304 445v19H80V445c0-27.6 11-54 30.5-73.5L192 289.9zm0-67.9l-81.5-81.5C91 121 80 94.6 80 67V48H304V67c0 27.6-11 54-30.5 73.5L192 222.1z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.countdown/./icons/countdown.svg?')}],__webpack_module_cache__={};function __webpack_require__(t){var e=__webpack_module_cache__[t];if(void 0!==e)return e.exports;var n=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(t,e)=>{for(var n in e)__webpack_require__.o(e,n)&&!__webpack_require__.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},__webpack_require__.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),__webpack_require__.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(4);return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));